{"version":3,"sources":["App.js","Weapons.js","index.js"],"names":["PixelPrice","BN","NearConfig","window","location","hostname","networkId","nodeUrl","contractName","walletUrl","Avocado","role","aria-label","className","Banana","Cucumber","Berry","intToColor","c","toString","padStart","intToColorWithAlpha","a","Math","round","rgbaToInt","cr","cg","cb","ca","bgColor","bb","bg","br","imgColorToInt","int2hsv","cInt","substr","r","parseInt","g","b","v","max","min","h","transparentColor","generateGamma","hue","gammaColors","i","push","decodeLine","line","buf","Buffer","from","length","Error","pixels","color","readUInt32LE","ownerIndex","App","props","colors","map","toLowerCase","currentColor","substring","state","connected","signedIn","accountId","pendingPixels","boardLoaded","selectedCell","alpha","pickerColor","pickingColor","owners","accounts","highlightedAccountIndex","selectedOwnerIndex","farmingBanana","weaponsOn","weaponsCodePosition","_buttonDown","_oldCounts","_numFailedTxs","_balanceRefreshTimer","canvasRef","React","createRef","_context","_lines","_queue","_pendingPixels","_refreshBoardTimer","_sendQueueTimer","_stopRefreshTime","Date","getTime","_accounts","_initNear","then","setState","_accountId","ircAccountId","replace","canvas","this","current","getContext","click","rendering","drawImg","pickColor","saveColor","drawPixel","mouseMove","e","x","y","touches","rect","target","getBoundingClientRect","targetTouches","clientX","left","clientY","top","offsetX","offsetY","trunc","clientWidth","clientHeight","cell","JSON","stringify","renderCanvas","preventDefault","addEventListener","mouseDown","unselectCell","mouseUp","buttons","document","altKey","enablePickColor","key","disablePickColor","slice","_contract","draw","console","log","concat","Promise","all","refreshBoard","refreshAccountStats","forEach","p","_pending","ready","clearTimeout","_sendQueue","setTimeout","_pingQueue","account","avocadoBalance","avocadoNeeded","img","imageData","w","width","height","d","Uint32Array","data","buffer","j","imgColor","account_id","accountIndex","account_index","parseFloat","avocado_balance","_pixelCost","bananaBalance","banana_balance","numPixels","num_pixels","farmingPreference","farming_preference","startTime","avocadoPixels","bananaPixels","avocadoRewardPerMs","bananaRewardPerMs","get_account","parseAccount","get_account_by_index","getAccount","clearInterval","setInterval","t","Object","assign","keyStore","nearAPI","BrowserLocalStorageKeyStore","deps","near","_keyStore","_near","_walletConnection","getAccountId","_account","viewMethods","changeMethods","get_pixel_cost","_lineVersions","Array","fill","forced","hidden","get_line_versions","lineVersions","needLines","requestLines","lines","get_lines","results","flat","lineIndex","_refreshOwners","counts","sortedKeys","keys","sort","getAccountByIndex","ctx","fillStyle","fillRect","CellWidth","CellHeight","beginPath","strokeStyle","lineWidth","stroke","closePath","arc","PI","requestSignIn","signOut","rgb","changeColor","hsl","newColor","index","indexOf","splice","hex","hsv","amount","requiredBalance","muln","buy_tokens","select_farming_preference","berry","content","onClick","logOut","Balance","detailed","onChange","switchBerry","checked","offColor","onColor","uncheckedIcon","checkedIcon","buyTokens","hueColorChange","alphaColorChange","triangle","onChangeComplete","style","marginBottom","aria-hidden","weapons","renderIt","renderImg","class","href","ref","Leaderboard","setHover","title","frameBorder","src","allow","allowFullScreen","data-ribbon","Component","fraction","avacadoBalance","avocadoFarm","bananaFarm","toFixed","owner","Owner","isSelected","isHighlighted","onMouseEnter","onMouseLeave","Account","shortAccountId","Weapons","lockedAspect","sourceImage","Image","onload","clearRect","imageSmoothingQuality","drawImage","getImageData","reduce","sum","f","reader","FileReader","readAsDataURL","naturalWidth","naturalHeight","aspect","event","result","value","type","onFilesChange","onError","onFilesError","multiple","accepts","minFileSize","clickable","updateVal","changeLockedAspect","disabled","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.81bb655f.chunk.js","sourcesContent":["import \"./App.scss\";\nimport \"./gh-fork-ribbon.css\";\nimport React from 'react';\nimport BN from 'bn.js';\nimport * as nearAPI from 'near-api-js'\nimport { AlphaPicker, HuePicker, GithubPicker } from 'react-color'\nimport Switch from \"react-switch\"\nimport {Weapons} from \"./Weapons\";\n\nconst PixelPrice = new BN(\"10000000000000000000000\");\nconst IsMainnet = window.location.hostname === \"berryclub.io\";\nconst TestNearConfig = {\n  networkId: 'testnet',\n  nodeUrl: 'https://rpc.testnet.near.org',\n  contractName: 'berryclub.testnet',\n  walletUrl: 'https://wallet.testnet.near.org',\n};\nconst MainNearConfig = {\n  networkId: 'mainnet',\n  nodeUrl: 'https://rpc.mainnet.near.org',\n  contractName: 'berryclub.ek.near',\n  walletUrl: 'https://wallet.near.org',\n};\nconst NearConfig = IsMainnet ? MainNearConfig : TestNearConfig;\n\nconst Avocado = <span role=\"img\" aria-label=\"avocado\" className=\"berry\">🥑</span>;\nconst Banana = <span role=\"img\" aria-label=\"banana\" className=\"berry\">🍌</span>;\nconst Cucumber = <span role=\"img\" aria-label=\"cucumber\" className=\"berry\">🥒</span>;\n\nconst Berry = {\n  Avocado: 'Avocado',\n  Banana: 'Banana',\n};\n\nconst BoardHeight = 50;\nconst BoardWidth = 50;\nconst NumLinesPerFetch = 10;\nconst ExpectedLineLength = 4 + 8 * BoardWidth;\nconst CellWidth = 12;\nconst CellHeight = 12;\nconst MaxNumColors = 31;\nconst BatchOfPixels = 100;\n// 500 ms\nconst BatchTimeout = 500;\nconst RefreshBoardTimeout = 1000;\nconst MaxWorkTime = 10 * 60 * 1000;\n\nconst intToColor = (c) => `#${c.toString(16).padStart(6, '0')}`;\nconst intToColorWithAlpha = (c, a) => `#${c.toString(16).padStart(6, '0')}${Math.round(255 * a).toString(16).padStart(2, '0')}`;\n\nconst rgbaToInt = (cr, cg, cb, ca, bgColor) => {\n  const bb = (bgColor & 255);\n  const bg = ((bgColor >> 8) & 255);\n  const br = ((bgColor >> 16) & 255);\n\n  const r = Math.round(cr * ca + br * (1 - ca));\n  const g = Math.round(cg * ca + bg * (1 - ca));\n  const b = Math.round(cb * ca + bb * (1 - ca));\n  return (r << 16) + (g << 8) + b;\n}\n\nconst imgColorToInt = (c, bgColor) => {\n  const cr = (c & 255);\n  const cg = ((c >> 8) & 255);\n  const cb = ((c >> 16) & 255);\n  const ca = ((c >> 24) & 255) / 255;\n  return rgbaToInt(cr, cg, cb, ca, bgColor);\n}\n\n  const int2hsv = (cInt) => {\n  cInt = intToColor(cInt).substr(1)\n  const r = parseInt(cInt.substr(0, 2), 16) / 255\n  const g = parseInt(cInt.substr(2, 2), 16) / 255\n  const b = parseInt(cInt.substr(4, 2), 16) / 255\n  let v=Math.max(r,g,b), c=v-Math.min(r,g,b);\n  let h= c && ((v===r) ? (g-b)/c : ((v===g) ? 2+(b-r)/c : 4+(r-g)/c));\n  return [60*(h<0?h+6:h), v&&c/v, v];\n}\nconst transparentColor = (c, a) => `rgba(${(c >> 16) / 1}, ${((c >> 8) & 0xff) / 1}, ${(c & 0xff) / 1}, ${a})`\nconst generateGamma = (hue) => {\n  const gammaColors = [];\n  for (let i = 0; i < MaxNumColors; ++i) {\n    gammaColors.push(`hsl(${hue}, 100%, ${100 * i / (MaxNumColors - 1)}%)`);\n  }\n  return gammaColors;\n};\nconst decodeLine = (line) => {\n  let buf = Buffer.from(line, 'base64');\n  if (buf.length !== ExpectedLineLength) {\n    throw new Error(\"Unexpected encoded line length\");\n  }\n  let pixels = []\n  for (let i = 4; i < buf.length; i += 8) {\n    let color = buf.readUInt32LE(i);\n    let ownerIndex = buf.readUInt32LE(i + 4);\n    pixels.push({\n      color,\n      ownerIndex,\n    })\n  }\n  return pixels;\n};\n\nconst WeaponsCheat = \"idkfa\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const colors = [\"#000000\", \"#666666\", \"#aaaaaa\", \"#FFFFFF\", \"#F44E3B\", \"#D33115\", \"#9F0500\", \"#FE9200\", \"#E27300\", \"#C45100\", \"#FCDC00\", \"#FCC400\", \"#FB9E00\", \"#DBDF00\", \"#B0BC00\", \"#808900\", \"#A4DD00\", \"#68BC00\", \"#194D33\", \"#68CCCA\", \"#16A5A5\", \"#0C797D\", \"#73D8FF\", \"#009CE0\", \"#0062B1\", \"#AEA1FF\", \"#7B64FF\", \"#653294\", \"#FDA1FF\", \"#FA28FF\", \"#AB149E\"].map((c) => c.toLowerCase());\n    // const currentColor = parseInt(colors[Math.floor(Math.random() * colors.length)].substring(1), 16);\n    const currentColor = parseInt(colors[0].substring(1), 16);\n    const defaultAlpha = 0.25;\n\n    this.state = {\n      connected: false,\n      signedIn: false,\n      accountId: null,\n      pendingPixels: 0,\n      boardLoaded: false,\n      selectedCell: null,\n      alpha: defaultAlpha,\n      currentColor,\n      pickerColor: intToColorWithAlpha(currentColor, defaultAlpha),\n      colors,\n      gammaColors: generateGamma(0),\n      pickingColor: false,\n      owners: [],\n      accounts: {},\n      highlightedAccountIndex: -1,\n      selectedOwnerIndex: false,\n      farmingBanana: false,\n      weaponsOn: false,\n      weaponsCodePosition: 0,\n    };\n\n    this._buttonDown = false;\n    this._oldCounts = {};\n    this._numFailedTxs = 0;\n    this._balanceRefreshTimer = null;\n    this.canvasRef = React.createRef();\n    this._context = false;\n    this._lines = false;\n    this._queue = [];\n    this._pendingPixels = [];\n    this._refreshBoardTimer = null;\n    this._sendQueueTimer = null;\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    this._accounts = {};\n\n    this._initNear().then(() => {\n      this.setState({\n        connected: true,\n        signedIn: !!this._accountId,\n        accountId: this._accountId,\n        ircAccountId: this._accountId.replace('.', '_')\n      });\n    });\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef.current;\n    this._context = canvas.getContext('2d');\n\n    const click = async () => {\n      if (this.state.rendering) {\n        await this.drawImg(this.state.selectedCell);\n      } else if (this.state.pickingColor) {\n        this.pickColor(this.state.selectedCell);\n      } else {\n        this.saveColor();\n        await this.drawPixel(this.state.selectedCell);\n      }\n    };\n\n    const mouseMove = (e) => {\n      let x, y;\n      if ('touches' in e) {\n        if (e.touches.length > 1) {\n          return true;\n        } else {\n          const rect = e.target.getBoundingClientRect();\n          x = e.targetTouches[0].clientX - rect.left;\n          y = e.targetTouches[0].clientY - rect.top;\n        }\n      } else {\n        x = e.offsetX;\n        y = e.offsetY;\n      }\n      x = Math.trunc(x / e.target.clientWidth * BoardWidth);\n      y = Math.trunc(y / e.target.clientHeight * BoardWidth);\n      let cell = null;\n      if (x >= 0 && x < BoardWidth && y >= 0 && y < BoardHeight) {\n        cell = {x, y};\n      }\n      if (JSON.stringify(cell) !== JSON.stringify(this.state.selectedCell)) {\n        this.setState({\n          selectedCell: cell,\n          selectedOwnerIndex: this._lines && cell && this._lines[cell.y] && this._lines[cell.y][cell.x].ownerIndex\n        }, async () => {\n          this.renderCanvas()\n          if (this.state.selectedCell !== null && this._buttonDown) {\n            await click();\n          }\n        })\n      }\n      e.preventDefault();\n      return false;\n    };\n\n    canvas.addEventListener('mousemove', mouseMove);\n    canvas.addEventListener('touchmove', mouseMove);\n\n    const mouseDown = async (e) => {\n      this._buttonDown = true;\n      if (this.state.selectedCell !== null) {\n        await click();\n      }\n    };\n\n    canvas.addEventListener('mousedown', mouseDown);\n    canvas.addEventListener('touchstart', mouseDown);\n\n    const unselectCell = () => {\n      this.setState({\n        selectedCell: null,\n      }, () => this.renderCanvas());\n    }\n\n    const mouseUp = async (e) => {\n      this._buttonDown = false;\n      if ('touches' in e) {\n        unselectCell();\n      }\n    }\n\n    canvas.addEventListener('mouseup', mouseUp);\n    canvas.addEventListener('touchend', mouseUp);\n\n    canvas.addEventListener('mouseleave', unselectCell);\n\n    canvas.addEventListener('mouseenter', (e) => {\n      if (this._buttonDown) {\n        if (!('touches' in e) && !(e.buttons & 1)) {\n          this._buttonDown = false;\n        }\n      }\n    });\n\n    document.addEventListener('keydown', (e) => {\n      e.altKey && this.enablePickColor()\n    })\n\n    document.addEventListener('keyup', (e) => {\n      if (this.state.weaponsCodePosition < WeaponsCheat.length) {\n        if (e.key.toLowerCase() === WeaponsCheat[this.state.weaponsCodePosition]) {\n          this.setState({\n            weaponsCodePosition: this.state.weaponsCodePosition + 1,\n            weaponsOn: this.state.weaponsCodePosition + 1 === WeaponsCheat.length,\n          });\n        } else {\n          this.setState({\n            weaponsCodePosition: 0,\n          });\n        }\n      }\n      !e.altKey && this.disablePickColor();\n    })\n  }\n\n  enablePickColor() {\n    this.setState({\n      pickingColor: true,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  disablePickColor() {\n    this.setState({\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  pickColor(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const color = this._lines[cell.y][cell.x].color;\n\n    this.setState({\n      currentColor: color,\n      alpha: 1,\n      pickerColor: intToColorWithAlpha(color, 1),\n      gammaColors: generateGamma(int2hsv(color)[0]),\n      pickingColor: false,\n    }, () => {\n      this.renderCanvas()\n    });\n  }\n\n  async _sendQueue() {\n    const pixels = this._queue.slice(0, BatchOfPixels);\n    this._queue = this._queue.slice(BatchOfPixels);\n    this._pendingPixels = pixels;\n\n    try {\n      await this._contract.draw({\n        pixels\n      }, new BN(\"75000000000000\"));\n      this._numFailedTxs = 0;\n    } catch (error) {\n      console.log(\"Failed to send a transaction\", error);\n      this._numFailedTxs += 1;\n      if (this._numFailedTxs < 3) {\n        this._queue = this._queue.concat(this._pendingPixels);\n        this._pendingPixels = [];\n      } else {\n        this._pendingPixels = [];\n        this._queue = [];\n      }\n    }\n    try {\n      await Promise.all([this.refreshBoard(true), this.refreshAccountStats()]);\n    } catch (e) {\n      // ignore\n    }\n    this._pendingPixels.forEach((p) => {\n      if (this._pending[p.y][p.x] === p.color) {\n        this._pending[p.y][p.x] = -1;\n      }\n    });\n    this._pendingPixels = [];\n  }\n\n  async _pingQueue(ready) {\n    if (this._sendQueueTimer) {\n      clearTimeout(this._sendQueueTimer);\n      this._sendQueueTimer = null;\n    }\n\n    if (this._pendingPixels.length === 0 && (this._queue.length >= BatchOfPixels || ready)) {\n      await this._sendQueue();\n    }\n    if (this._queue.length > 0) {\n      this._sendQueueTimer = setTimeout(async () => {\n        await this._pingQueue(true);\n      }, BatchTimeout);\n    }\n\n  }\n\n  async drawImg(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const balance = this.state.account ? this.state.account.avocadoBalance : 0;\n\n    if (balance - this.state.pendingPixels < this.state.avocadoNeeded) {\n      return;\n    }\n\n    const img = this.imageData;\n    const w = img.width;\n    const h = img.height;\n    const x = cell.x - Math.trunc(w / 2);\n    const y = cell.y - Math.trunc(h / 2);\n    const d = new Uint32Array(this.imageData.data.buffer);\n    for (let i = 0; i < h; ++i) {\n      for (let j = 0; j < w; ++j) {\n        const imgColor = d[i * w + j];\n        if (imgColor && y + i >= 0 && y + i < BoardHeight && x + j >= 0 && x + j < BoardWidth) {\n          const bgColor = this._lines[y + i] ? this._lines[y + i][x + j].color : 0;\n          const color = imgColorToInt(imgColor, bgColor);\n          if (color !== bgColor) {\n            this._queue.push({\n              x: x + j,\n              y: y + i,\n              color,\n            });\n          }\n        }\n      }\n    }\n    this.setState({\n      rendering: false,\n    })\n\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    await this._pingQueue(false);\n  }\n\n  async drawPixel(cell) {\n    if (!this.state.signedIn || !this._lines || !this._lines[cell.y]) {\n      return;\n    }\n    const balance = this.state.account ? this.state.account.avocadoBalance : 0;\n    if (balance - this.state.pendingPixels < 1) {\n      return;\n    }\n\n    const bgColor = this._lines[cell.y] ? this._lines[cell.y][cell.x].color : 0;\n    const cb = (this.state.currentColor & 255);\n    const cg = ((this.state.currentColor >> 8) & 255);\n    const cr = ((this.state.currentColor >> 16) & 255);\n    const color = rgbaToInt(cr, cg, cb, this.state.alpha, bgColor);\n\n    if (this._pending[cell.y][cell.x] !== color && this._lines[cell.y][cell.x].color !== color) {\n      this._pending[cell.y][cell.x] = color;\n    } else {\n      return;\n    }\n\n    this._queue.push({\n      x: cell.x,\n      y: cell.y,\n      color,\n    });\n\n    this._stopRefreshTime = new Date().getTime() + MaxWorkTime;\n    await this._pingQueue(false);\n  }\n\n  parseAccount(account, accountId) {\n    if (!account) {\n      account = {\n        accountId,\n        accountIndex: -1,\n        avocadoBalance: 25.0,\n        bananaBalance: 0.0,\n        numPixels: 0,\n        farmingPreference: Berry.Avocado,\n      }\n    } else {\n      account = {\n        accountId: account.account_id,\n        accountIndex: account.account_index,\n        avocadoBalance: parseFloat(account.avocado_balance) / this._pixelCost,\n        bananaBalance: parseFloat(account.banana_balance) / this._pixelCost,\n        numPixels: account.num_pixels,\n        farmingPreference: account.farming_preference,\n      }\n    }\n    account.startTime = new Date().getTime();\n    account.avocadoPixels = (account.farmingPreference === Berry.Avocado) ? (account.numPixels + 1) : 0;\n    account.bananaPixels = (account.farmingPreference === Berry.Banana) ? (account.numPixels) : 0;\n    account.avocadoRewardPerMs = account.avocadoPixels / (24 * 60 * 60 * 1000);\n    account.bananaRewardPerMs = account.bananaPixels / (24 * 60 * 60 * 1000);\n    return account;\n  }\n\n  async getAccount(accountId) {\n    return this.parseAccount(\n      await this._contract.get_account({account_id: accountId}),\n      accountId\n    );\n  }\n\n  async getAccountByIndex(accountIndex) {\n    return this.parseAccount(\n      await this._contract.get_account_by_index({account_index: accountIndex}),\n      \"unknown\",\n    );\n  }\n\n  async refreshAccountStats() {\n    let account = await this.getAccount(this._accountId);\n    if (this._balanceRefreshTimer) {\n      clearInterval(this._balanceRefreshTimer);\n      this._balanceRefreshTimer = null;\n    }\n\n    this.setState({\n      pendingPixels: this._pendingPixels.length + this._queue.length,\n      farmingBanana: account.farmingPreference === Berry.Banana,\n      account,\n    });\n\n    this._balanceRefreshTimer = setInterval(() => {\n      const t = new Date().getTime() - account.startTime;\n      this.setState({\n        account: Object.assign({}, account, {\n          avocadoBalance: account.avocadoBalance + t * account.avocadoRewardPerMs,\n          bananaBalance: account.bananaBalance + t * account.bananaRewardPerMs,\n        }),\n        pendingPixels: this._pendingPixels.length + this._queue.length,\n      });\n    }, 100);\n  }\n\n  async _initNear() {\n    const keyStore = new nearAPI.keyStores.BrowserLocalStorageKeyStore();\n    const near = await nearAPI.connect(Object.assign({deps: {keyStore}}, NearConfig));\n    this._keyStore = keyStore;\n    this._near = near;\n\n    this._walletConnection = new nearAPI.WalletConnection(near, NearConfig.contractName);\n    this._accountId = this._walletConnection.getAccountId();\n\n    this._account = this._walletConnection.account();\n    this._contract = new nearAPI.Contract(this._account, NearConfig.contractName, {\n      viewMethods: ['get_account', 'get_account_by_index', 'get_lines', 'get_line_versions', 'get_pixel_cost', 'get_account_balance', 'get_account_num_pixels', 'get_account_id_by_index'],\n      changeMethods: ['draw', 'buy_tokens', 'select_farming_preference'],\n    });\n    this._pixelCost = parseFloat(await this._contract.get_pixel_cost());\n    if (this._accountId) {\n      await this.refreshAccountStats();\n    }\n    this._lineVersions = Array(BoardHeight).fill(-1);\n    this._lines = Array(BoardHeight).fill(false);\n    this._pending = Array(BoardHeight).fill(false);\n    this._pending.forEach((v, i, a) => a[i] = Array(BoardWidth).fill(-1));\n    await this.refreshBoard(true);\n  }\n\n  async refreshBoard(forced) {\n    if (this._refreshBoardTimer) {\n      clearTimeout(this._refreshBoardTimer);\n      this._refreshBoardTimer = null;\n    }\n    const t = new Date().getTime();\n    if (t < this._stopRefreshTime) {\n      this._refreshBoardTimer = setTimeout(async () => {\n        await this.refreshBoard(false);\n      }, RefreshBoardTimeout);\n    }\n\n    if (!forced && document.hidden) {\n      return;\n    }\n\n    let lineVersions = await this._contract.get_line_versions();\n    let needLines = [];\n    for (let i = 0; i < BoardHeight; ++i) {\n      if (lineVersions[i] !== this._lineVersions[i]) {\n        needLines.push(i);\n      }\n    }\n    let requestLines = []\n    for (let i = 0; i < needLines.length; i += NumLinesPerFetch) {\n      requestLines.push(needLines.slice(i, i + NumLinesPerFetch));\n    }\n\n    let results = await Promise.all(requestLines.map(lines => this._contract.get_lines({lines})));\n    results = results.flat();\n    requestLines = requestLines.flat();\n    for (let i = 0; i < requestLines.length; ++i) {\n      let lineIndex = requestLines[i];\n      let line = decodeLine(results[i]);\n      this._lines[lineIndex] = line;\n    }\n\n    this._lineVersions = lineVersions;\n    this._refreshOwners();\n    this.renderCanvas();\n  }\n\n  _refreshOwners() {\n    const counts = {};\n    this._lines.flat().forEach((cell) => {\n      counts[cell.ownerIndex] = (counts[cell.ownerIndex] || 0) + 1;\n    })\n    delete counts[0];\n    const sortedKeys = Object.keys(counts).sort((a, b) => counts[b] - counts[a]);\n    this.setState({\n      owners: sortedKeys.map((accountIndex) => {\n        accountIndex = parseInt(accountIndex);\n        return {\n          accountIndex,\n          numPixels: counts[accountIndex],\n        }\n      })\n    })\n    sortedKeys.forEach(async (accountIndex) => {\n      accountIndex = parseInt(accountIndex);\n      if (!(accountIndex in this._accounts) || counts[accountIndex] !== (this._oldCounts[accountIndex] || 0)) {\n        try {\n          this._accounts[accountIndex] = await this.getAccountByIndex(accountIndex);\n        } catch (err) {\n          console.log(\"Failed to fetch account index #\", accountIndex, err)\n        }\n        this.setState({\n          accounts: Object.assign({}, this._accounts),\n        })\n      }\n    })\n    this.setState({\n      accounts: Object.assign({}, this._accounts),\n    })\n    this._oldCounts = counts;\n  }\n\n  renderCanvas() {\n    if (!this._context || !this._lines) {\n      return;\n    }\n\n    const ctx = this._context;\n\n    for (let i = 0; i < BoardHeight; ++i) {\n      const line = this._lines[i];\n      if (!line) {\n        continue;\n      }\n      for (let j = 0; j < BoardWidth; ++j) {\n        const p = line[j];\n        ctx.fillStyle = intToColor(p.color);\n        ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth, CellHeight);\n        if (this.state.highlightedAccountIndex >= 0) {\n          if (p.ownerIndex !== this.state.highlightedAccountIndex) {\n            ctx.fillStyle = 'rgba(32, 32, 32, 0.8)';\n            ctx.fillRect(j * CellWidth, i * CellHeight, CellWidth / 2, CellHeight / 2);\n            ctx.fillRect((j + 0.5) * CellWidth, (i + 0.5) * CellHeight, CellWidth / 2, CellHeight / 2);\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.8)';\n            ctx.fillRect(j * CellWidth, (i + 0.5) * CellHeight, CellWidth / 2, CellHeight / 2);\n            ctx.fillRect((j + 0.5) * CellWidth, i * CellHeight, CellWidth / 2, CellHeight / 2);\n          } else {\n            ctx.beginPath();\n            ctx.strokeStyle = ctx.fillStyle = 'rgba(255, 255, 255, 0.8)';\n            ctx.lineWidth = 0.5;\n            ctx.rect(j * CellWidth + 0.5, i * CellHeight + 0.5, CellWidth - 1, CellHeight - 1);\n            ctx.stroke();\n            ctx.closePath();\n          }\n        }\n      }\n    }\n\n    this._pendingPixels.concat(this._queue).forEach((p) => {\n      ctx.fillStyle = intToColor(p.color);\n      ctx.fillRect(p.x * CellWidth, p.y * CellHeight, CellWidth, CellHeight);\n    })\n\n    if (this.state.selectedCell) {\n      const c = this.state.selectedCell;\n      if (this.state.rendering) {\n        const img = this.imageData;\n        const w = img.width;\n        const h = img.height;\n        const x = c.x - Math.trunc(w / 2);\n        const y = c.y - Math.trunc(h / 2);\n        const d = new Uint32Array(this.imageData.data.buffer);\n        for (let i = 0; i < h; ++i) {\n          for (let j = 0; j < w; ++j) {\n            const color = d[i * w + j];\n            if (color && y + i >= 0 && y + i < BoardHeight && x + j >= 0 && x + j < BoardWidth) {\n              const bgColor = this._lines[y + i] ? this._lines[y + i][x + j].color : 0;\n              ctx.fillStyle = intToColor(imgColorToInt(color, bgColor));\n              ctx.fillRect((x + j) * CellWidth, (y + i) * CellHeight, CellWidth, CellHeight);\n            }\n          }\n        }\n      } else if (this.state.pickingColor) {\n        const color = this._lines[c.y] ? this._lines[c.y][c.x].color : 0;\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 0.5);\n        ctx.lineWidth = CellWidth * 4;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = transparentColor(color, 1);\n        ctx.lineWidth = CellWidth * 2;\n        ctx.arc((c.x + 0.5) * CellWidth, (c.y + 0.5) * CellHeight, CellWidth * 4, 0, 2 * Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n      } else {\n        ctx.fillStyle = transparentColor(this.state.currentColor, 0.2);\n        ctx.fillRect(c.x * CellWidth, 0, CellWidth, c.y * CellHeight);\n        ctx.fillRect(c.x * CellWidth, (c.y + 1) * CellHeight, CellWidth, (BoardHeight - c.y - 1) * CellHeight);\n        ctx.fillRect(0, c.y * CellHeight, c.x * CellWidth, CellHeight);\n        ctx.fillRect((c.x + 1) * CellWidth, c.y * CellHeight, (BoardWidth - c.x - 1) * CellWidth, CellHeight);\n\n        ctx.beginPath();\n        ctx.lineWidth = 3;\n        ctx.fillStyle = intToColor(this.state.currentColor);\n        ctx.strokeStyle = intToColor(this.state.currentColor);\n        ctx.rect(c.x * CellWidth, c.y * CellHeight, CellWidth, CellHeight);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n    }\n\n\n    if (!this.state.boardLoaded) {\n      this.setState({\n        boardLoaded: true\n      })\n    }\n  }\n\n  async requestSignIn() {\n    const appTitle = 'Berry Club';\n    await this._walletConnection.requestSignIn(\n      NearConfig.contractName,\n      appTitle\n    )\n  }\n\n  async logOut() {\n    this._walletConnection.signOut();\n    this._accountId = null;\n    this.setState({\n      signedIn: !!this._accountId,\n      accountId: this._accountId,\n    })\n  }\n\n  async alphaColorChange(c) {\n    this.setState({\n      alpha: c.rgb.a,\n    }, () => {\n      this.changeColor(c, c.rgb.a)\n    });\n  }\n\n  hueColorChange(c) {\n    this.setState({\n      gammaColors: generateGamma(c.hsl.h)\n    })\n    this.changeColor(c)\n  }\n\n  saveColor() {\n    const newColor = intToColor(this.state.currentColor);\n    const index = this.state.colors.indexOf(newColor);\n    if (index >= 0) {\n      this.state.colors.splice(index, 1);\n    }\n    this.setState({\n      colors: [newColor].concat(this.state.colors).slice(0, MaxNumColors)\n    });\n  }\n\n  changeColor(c, alpha) {\n    alpha = alpha || 1.0;\n    const currentColor = c.rgb.r * 0x010000 + c.rgb.g * 0x000100 + c.rgb.b;\n    c.hex = intToColorWithAlpha(currentColor, alpha);\n    c.rgb.a = alpha;\n    c.hsl.a = alpha;\n    c.hsv.a = alpha;\n    this.setState({\n      pickerColor: c,\n      alpha,\n      currentColor,\n    }, () => {\n      this.renderCanvas();\n    })\n  }\n\n  async buyTokens(amount) {\n    const requiredBalance = PixelPrice.muln(amount);\n    await this._contract.buy_tokens({}, new BN(\"30000000000000\"), requiredBalance);\n  }\n\n  setHover(accountIndex, v) {\n    if (v) {\n      this.setState({\n        highlightedAccountIndex: accountIndex,\n      }, () => {\n        this.renderCanvas();\n      })\n    } else if (this.state.highlightedAccountIndex === accountIndex) {\n      this.setState({\n        highlightedAccountIndex: -1,\n      }, () => {\n        this.renderCanvas();\n      })\n    }\n  }\n\n  async switchBerry(farmingBanana) {\n    this.setState({\n      farmingBanana,\n    })\n    await this._contract.select_farming_preference({\n      berry: farmingBanana ? Berry.Banana : Berry.Avocado,\n    });\n    await this.refreshAccountStats();\n  }\n\n  async renderImg(img, avocadoNeeded) {\n    this.imageData = img;\n    this.setState({\n      weaponsOn: false,\n      weaponsCodePosition: 0,\n      rendering: true,\n      pickingColor: false,\n      avocadoNeeded\n    })\n  }\n\n  render() {\n\n    const content = !this.state.connected ? (\n        <div>Connecting... <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span></div>\n    ) : (this.state.signedIn ? (\n        <div>\n          <div className=\"float-right\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              onClick={() => this.logOut()}>Log out ({this.state.accountId})</button>\n          </div>\n          <div className=\"your-balance\">\n            Balance: <Balance\n              account={this.state.account}\n              pendingPixels={this.state.pendingPixels}\n              detailed={true}\n          />\n          <div>\n            Farming preference:\n            <Switch\n                onChange={(e) => this.switchBerry(e)}\n                checked={this.state.farmingBanana}\n                className=\"react-switch\"\n                height={30}\n                width={70}\n                offColor=\"#666\"\n                onColor=\"#666\"\n                uncheckedIcon={<div className=\"switch-berry avocado\">{Avocado}</div>}\n                checkedIcon={<div className=\"switch-berry banana\">{Banana}</div>}\n            />\n          </div>\n          </div>\n          <div className=\"buttons\">\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(10)}>Buy <span className=\"font-weight-bold\">25{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ0.1</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(40)}>Buy <span className=\"font-weight-bold\">100{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ0.4</span></button>{' '}\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => this.buyTokens(100)}>Buy <span className=\"font-weight-bold\">250{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ1</span></button>{' '}\n            <button\n              className=\"btn btn-success\"\n              onClick={() => this.buyTokens(500)}>DEAL: Buy <span className=\"font-weight-bold\">1500{Avocado}</span> for <span className=\"font-weight-bold\">Ⓝ5</span></button>\n          </div>\n          <div className=\"color-picker\">\n            <HuePicker color={ this.state.pickerColor } width=\"100%\" onChange={(c) => this.hueColorChange(c)}/>\n            <AlphaPicker color={ this.state.pickerColor } width=\"100%\" onChange={(c) => this.alphaColorChange(c)}/>\n            <div className={this.state.alpha >= 0.75 ? \"display-warning\" : \"hidden\"}>\n              <span role=\"img\" aria-label=\"warning\">⚠️</span>️ Please! Don't destroy art! If you just want to farm {Banana}, just draw with low opacity.\n              <span role=\"img\" aria-label=\"pray\">🙏</span>️\n            </div>\n            <GithubPicker className=\"circle-picker\" colors={this.state.gammaColors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.changeColor(c)}/>\n            <GithubPicker className=\"circle-picker\" colors={this.state.colors} color={ this.state.pickerColor } triangle='hide' width=\"100%\" onChangeComplete={(c) => this.hueColorChange(c)}/>\n          </div>\n        </div>\n    ) : (\n        <div style={{marginBottom: \"10px\"}}>\n          <button\n              className=\"btn btn-primary\"\n              onClick={() => this.requestSignIn()}>Log in with NEAR Wallet</button>\n        </div>\n    ));\n    const weapons = this.state.weaponsOn ? (\n      <div>\n        <Weapons\n          account={this.state.account}\n          renderIt={(img, avocadoNeeded) => this.renderImg(img, avocadoNeeded)}/>\n      </div>\n    ) : \"\";\n    return (\n      <div>\n        <div class=\"header\">\n          <h2>{Avocado} Berry Club {Banana}</h2>{' '}\n          <a\n            className=\"btn btn-outline-none\"\n            href=\"https://farm.berryclub.io\">Berry Farm {Cucumber}\n          </a>\n          <a\n            className=\"btn btn-outline-none\"\n            href=\"https://bananaswap.berryclub.io\">[BETA] Banana Swap {Banana}\n          </a>\n          {content}\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div>\n              <div>\n                <canvas ref={this.canvasRef}\n                        width={600}\n                        height={600}\n                        className={this.state.boardLoaded ? \"pixel-board\" : \"pixel-board c-animated-background\"}>\n\n                </canvas>\n              </div>\n            </div>\n            <div className=\"leaderboard\">\n              <div>\n                <Leaderboard\n                  owners={this.state.owners}\n                  accounts={this.state.accounts}\n                  setHover={(accountIndex, v) => this.setHover(accountIndex, v)}\n                  selectedOwnerIndex={this.state.selectedOwnerIndex}\n                  highlightedAccountIndex={this.state.highlightedAccountIndex}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"padded\">\n          {this.state.signedIn ? (<div>\n            <iframe title=\"irc\" className=\"irc\" frameBorder=\"0\" src={`https://kiwiirc.com/client/irc.kiwiirc.com/?nick=${this.state.ircAccountId}#berryclub`} ></iframe>\n          </div>) : \"\"}\n        </div>\n        <div className=\"padded\">\n          <div className=\"video-container\">\n            <iframe title=\"youtube\" className=\"youtube\" src=\"https://www.youtube.com/embed/lMSWhCwstLo\" frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen></iframe>\n          </div>\n          <div></div>\n        </div>\n        <div className=\"padded\">\n          <div className=\"video-container\">\n            <iframe title=\"youtube2\" className=\"youtube\" src=\"https://www.youtube.com/embed/PYF6RWd7ZgI\" frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen></iframe>\n          </div>\n        </div>\n        <div></div>\n        {weapons}\n        <a className=\"github-fork-ribbon right-bottom fixed\" href=\"https://github.com/evgenykuzyakov/place\" data-ribbon=\"Fork me on GitHub\"\n           title=\"Fork me on GitHub\">Fork me on GitHub</a>\n      </div>\n    );\n  }\n}\n\nconst Balance = (props) => {\n  const account = props.account;\n  if (!account) {\n    return \"\";\n  }\n  const fraction = props.detailed ? 3: 1;\n  const avacadoBalance = account.avocadoBalance - (props.pendingPixels || 0);\n  const avocadoFarm = (account.avocadoPixels > 0) ? (\n    <span>\n      {'(+'}<span className=\"font-weight-bold\">{account.avocadoPixels}</span>{Avocado}{'/day)'}\n    </span>\n  ) : \"\";\n  const bananaFarm = (account.bananaPixels > 0) ? (\n    <span>\n      {'(+'}<span className=\"font-weight-bold\">{account.bananaPixels}</span>{Banana}{'/day)'}\n    </span>\n  ) : \"\";\n  return (\n    <span className=\"balances font-small\">\n      <span className=\"font-weight-bold\">{avacadoBalance.toFixed(fraction)}</span>{Avocado}{' '}\n      <span className=\"font-weight-bold\">{account.bananaBalance.toFixed(fraction)}</span>{Banana}{' '}\n      {avocadoFarm}\n      {bananaFarm}\n      {\n        props.pendingPixels ? <span> ({props.pendingPixels} pending)</span> : \"\"\n      }\n    </span>\n  );\n};\n\nconst Leaderboard = (props) => {\n  const owners = props.owners.map((owner) => {\n    if (owner.accountIndex in props.accounts) {\n      owner.account = props.accounts[owner.accountIndex];\n    }\n    return <Owner\n      key={owner.accountIndex}\n      {...owner}\n      isSelected={owner.accountIndex === props.selectedOwnerIndex}\n      setHover={(v) => props.setHover(owner.accountIndex, v)}\n      isHighlighted={owner.accountIndex === props.highlightedAccountIndex}\n    />\n  })\n  return (\n    <table className=\"table table-hover table-sm\"><tbody>{owners}</tbody></table>\n  );\n};\n\nconst Owner = (props) => {\n  const account = props.account;\n  return (\n    <tr onMouseEnter={() => props.setHover(true)}\n        onMouseLeave={() => props.setHover(false)}\n        className={props.isSelected ? \"selected\" : \"\"}>\n      <td>\n        {account ? <Account accountId={account.accountId} /> : \"...\"}\n      </td>\n      <td className=\"text-nowrap\">\n        <small>\n          <Balance account={account} />\n        </small>\n      </td>\n    </tr>\n  )\n}\n\nconst Account = (props) => {\n  const accountId = props.accountId;\n  const shortAccountId = (accountId.length > 6 + 6 + 3) ?\n    (accountId.slice(0, 6) + '...' + accountId.slice(-6)) :\n    accountId;\n  return <a className=\"account\"\n            href={`https://wayback.berryclub.io/${accountId}`}>{shortAccountId}</a>\n}\n\nexport default App;\n","import \"./Weapons.scss\";\nimport React from 'react';\nimport Files from \"react-files\";\n\nconst Avocado = <span role=\"img\" aria-label=\"avocado\" className=\"berry\">🥑</span>;\n\nexport class Weapons extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      width: 48,\n      height: 28,\n      avocadoNeeded: 100,\n      lockedAspect: true,\n    };\n  }\n\n  componentDidMount() {\n    this.canvas = this.canvasRef.current;\n    this.ctx = this.canvas.getContext('2d');\n    this.sourceImage = new Image();\n    this.sourceImage.onload = () => {\n      this.draw();\n    }\n    this.sourceImage.src = \"/bfg.png\";\n  }\n\n  draw() {\n    const sourceImage = this.sourceImage;\n    const canvas = this.canvas;\n    const ctx = this.ctx;\n    const width = this.state.width;\n    const height = this.state.height;\n\n    // Create a canvas with the desired dimensions\n    canvas.width = width;\n    canvas.height = height;\n    canvas.style.width = (width * 10) + 'px';\n    canvas.style.height = (height * 10) + 'px';\n\n    // Scale and draw the source image to the canvas\n    ctx.clearRect(0, 0, width, height);\n    ctx.imageSmoothingQuality = \"low\";\n    ctx.drawImage(sourceImage, 0, 0, width, height);\n\n    const imageData = ctx.getImageData(0, 0, width, height);\n    this.imageData = imageData;\n    this.setState({\n      avocadoNeeded: new Uint32Array(imageData.data.buffer).reduce((sum, v) => sum + (v ? 1 : 0), 0),\n    });\n  }\n\n  async onFilesChange(f) {\n    const sourceImage = this.sourceImage;\n    let reader = new FileReader();\n\n    reader.readAsDataURL(f[0]);\n\n    sourceImage.onload = () => {\n      let width = sourceImage.naturalWidth;\n      let height = sourceImage.naturalHeight;\n      if (sourceImage.naturalWidth > 50 || sourceImage.naturalHeight > 50) {\n        const aspect = width / height;\n        width = Math.round(20 * Math.min(1, aspect));\n        height = Math.round(20 * Math.min(1, 1 / aspect));\n      }\n      this.setState({\n        width: Math.min(50, Math.max(1, width)),\n        height: Math.min(50, Math.max(1, height)),\n      });\n      this.draw();\n\n    }\n\n    reader.onload = function(event) {\n      sourceImage.src = event.target.result;\n    };\n  }\n\n  async onFilesError(e, f) {\n    console.log(e, f);\n  }\n\n  updateVal(key, value) {\n    value = Math.min(50, Math.max(1, value));\n    if (this.state.lockedAspect) {\n      const aspect = this.sourceImage.naturalWidth / this.sourceImage.naturalHeight;\n      let width, height;\n      if (key === 'width') {\n        width = value;\n        height = Math.round(width / aspect);\n      } else {\n        height = value;\n        width = Math.round(height * aspect);\n      }\n      this.setState({\n        width: Math.min(50, Math.max(1, width)),\n        height: Math.min(50, Math.max(1, height)),\n      }, () => {\n        this.draw();\n      });\n    } else {\n      this.setState({\n        [key]: value,\n      }, () => {\n        this.draw();\n      })\n    }\n  }\n\n  changeLockedAspect() {\n    this.setState({\n      lockedAspect: !this.state.lockedAspect,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"weapons-popup\">\n        <div className=\"weapons-content\">\n          <h2>So you need a BFG?</h2>\n          <div>\n            <Files\n              type=\"button\"\n              className='btn'\n              onChange={(f) => this.onFilesChange(f)}\n              onError={(e, f) => this.onFilesError(e, f)}\n              multiple={false}\n              accepts={['image/*']}\n              minFileSize={1}\n              clickable\n            >\n              Click to upload an image\n            </Files>\n          </div>\n          <div>\n            <label>Width</label>\n            <input type=\"number\" value={this.state.width}\n                   min={1}\n                   max={50}\n                   onChange={(e) => this.updateVal('width', e.target.value)} />\n            {' '}\n            <button\n              className={\"btn btn-outline-secondary low-right-margin\" + (this.state.lockedAspect ? \" btn-pressed\" : \" btn-not-pressed\")}\n              onClick={() => this.changeLockedAspect()}\n            >\n              <span role=\"img\" aria-label=\"link\" className=\"berry\">🔗</span>\n            </button>\n            <label>Height</label>\n            <input type=\"number\" value={this.state.height}\n                   min={1}\n                   max={50}\n                   onChange={(e) => this.updateVal('height', e.target.value)} />\n          </div>\n          <button\n            className='btn btn-success btn-large'\n            disabled={!this.props.account || this.props.account.avocadoBalance < this.state.avocadoNeeded}\n            onClick={() => this.props.renderIt(this.imageData, this.state.avocadoNeeded)}\n          >\n            Render on the board using {this.state.avocadoNeeded} {Avocado}\n          </button>\n          <div className=\"canvas-wrapper\">\n            <canvas ref={this.canvasRef}\n                    width={480}\n                    height={280}\n                    className=\"draw-preview\">\n            </canvas>\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}